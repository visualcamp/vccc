.TH "log/include/vccc/log/detail/android.hpp" 3 "Fri Dec 18 2020" "VCCC" \" -*- nroff -*-
.ad l
.nh
.SH NAME
log/include/vccc/log/detail/android.hpp
.SH SYNOPSIS
.br
.PP
\fC#include <android/log\&.h>\fP
.br

.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBLOG_TAG\fP   'LOG_TAG_ANDROID'"
.br
.ti -1c
.RI "#define \fBLOGV_IMPL\fP(\&.\&.\&.)   __android_log_print(ANDROID_LOG_VERBOSE, \fBLOG_TAG\fP, __VA_ARGS__)"
.br
.ti -1c
.RI "#define \fBLOGD_IMPL\fP(\&.\&.\&.)   __android_log_print(ANDROID_LOG_DEBUG, \fBLOG_TAG\fP, __VA_ARGS__)"
.br
.ti -1c
.RI "#define \fBLOGI_IMPL\fP(\&.\&.\&.)   __android_log_print(ANDROID_LOG_INFO, \fBLOG_TAG\fP, __VA_ARGS__)"
.br
.ti -1c
.RI "#define \fBLOGW_IMPL\fP(\&.\&.\&.)   __android_log_print(ANDROID_LOG_WARN, \fBLOG_TAG\fP, __VA_ARGS__)"
.br
.ti -1c
.RI "#define \fBLOGE_IMPL\fP(\&.\&.\&.)   __android_log_print(ANDROID_LOG_ERROR, \fBLOG_TAG\fP, __VA_ARGS__)"
.br
.ti -1c
.RI "#define \fBLOGF_IMPL\fP(\&.\&.\&.)   __android_log_print(ANDROID_FATAL_ERROR, \fBLOG_TAG\fP, __VA_ARGS__)"
.br
.ti -1c
.RI "#define \fBLOGS_IMPL\fP(\&.\&.\&.)   __android_log_print(ANDROID_SILENT_ERROR, \fBLOG_TAG\fP, __VA_ARGS__)"
.br
.in -1c
.SH "Macro Definition Documentation"
.PP 
.SS "#define LOG_TAG   'LOG_TAG_ANDROID'"

.SS "#define LOGV_IMPL( \&.\&.\&.)   __android_log_print(ANDROID_LOG_VERBOSE, \fBLOG_TAG\fP, __VA_ARGS__)"

.SS "#define LOGD_IMPL( \&.\&.\&.)   __android_log_print(ANDROID_LOG_DEBUG, \fBLOG_TAG\fP, __VA_ARGS__)"

.SS "#define LOGI_IMPL( \&.\&.\&.)   __android_log_print(ANDROID_LOG_INFO, \fBLOG_TAG\fP, __VA_ARGS__)"

.SS "#define LOGW_IMPL( \&.\&.\&.)   __android_log_print(ANDROID_LOG_WARN, \fBLOG_TAG\fP, __VA_ARGS__)"

.SS "#define LOGE_IMPL( \&.\&.\&.)   __android_log_print(ANDROID_LOG_ERROR, \fBLOG_TAG\fP, __VA_ARGS__)"

.SS "#define LOGF_IMPL( \&.\&.\&.)   __android_log_print(ANDROID_FATAL_ERROR, \fBLOG_TAG\fP, __VA_ARGS__)"

.SS "#define LOGS_IMPL( \&.\&.\&.)   __android_log_print(ANDROID_SILENT_ERROR, \fBLOG_TAG\fP, __VA_ARGS__)"

.SH "Author"
.PP 
Generated automatically by Doxygen for VCCC from the source code\&.
