var annotated_dup =
[
    [ "std", "namespacestd.html", [
      [ "hash< vccc::optional< T > >", "structstd_1_1hash_3_01vccc_1_1optional_3_01_t_01_4_01_4.html", "structstd_1_1hash_3_01vccc_1_1optional_3_01_t_01_4_01_4" ],
      [ "tuple_element< 0, cv::Point3_< T > >", "structstd_1_1tuple__element_3_010_00_01cv_1_1_point3___3_01_t_01_4_01_4.html", "structstd_1_1tuple__element_3_010_00_01cv_1_1_point3___3_01_t_01_4_01_4" ],
      [ "tuple_element< 0, cv::Point_< T > >", "structstd_1_1tuple__element_3_010_00_01cv_1_1_point___3_01_t_01_4_01_4.html", "structstd_1_1tuple__element_3_010_00_01cv_1_1_point___3_01_t_01_4_01_4" ],
      [ "tuple_element< 0, cv::Size_< T > >", "structstd_1_1tuple__element_3_010_00_01cv_1_1_size___3_01_t_01_4_01_4.html", "structstd_1_1tuple__element_3_010_00_01cv_1_1_size___3_01_t_01_4_01_4" ],
      [ "tuple_element< 1, cv::Point3_< T > >", "structstd_1_1tuple__element_3_011_00_01cv_1_1_point3___3_01_t_01_4_01_4.html", "structstd_1_1tuple__element_3_011_00_01cv_1_1_point3___3_01_t_01_4_01_4" ],
      [ "tuple_element< 1, cv::Point_< T > >", "structstd_1_1tuple__element_3_011_00_01cv_1_1_point___3_01_t_01_4_01_4.html", "structstd_1_1tuple__element_3_011_00_01cv_1_1_point___3_01_t_01_4_01_4" ],
      [ "tuple_element< 1, cv::Size_< T > >", "structstd_1_1tuple__element_3_011_00_01cv_1_1_size___3_01_t_01_4_01_4.html", "structstd_1_1tuple__element_3_011_00_01cv_1_1_size___3_01_t_01_4_01_4" ],
      [ "tuple_element< 2, cv::Point3_< T > >", "structstd_1_1tuple__element_3_012_00_01cv_1_1_point3___3_01_t_01_4_01_4.html", "structstd_1_1tuple__element_3_012_00_01cv_1_1_point3___3_01_t_01_4_01_4" ],
      [ "tuple_element< I, cv::Matx< T, m, n > >", "structstd_1_1tuple__element_3_01_i_00_01cv_1_1_matx_3_01_t_00_01m_00_01n_01_4_01_4.html", null ],
      [ "tuple_element< I, cv::Vec< T, cn > >", "structstd_1_1tuple__element_3_01_i_00_01cv_1_1_vec_3_01_t_00_01cn_01_4_01_4.html", null ],
      [ "tuple_size< cv::Matx< T, m, n > >", "structstd_1_1tuple__size_3_01cv_1_1_matx_3_01_t_00_01m_00_01n_01_4_01_4.html", null ],
      [ "tuple_size< cv::Point3_< T > >", "structstd_1_1tuple__size_3_01cv_1_1_point3___3_01_t_01_4_01_4.html", null ],
      [ "tuple_size< cv::Point_< T > >", "structstd_1_1tuple__size_3_01cv_1_1_point___3_01_t_01_4_01_4.html", null ],
      [ "tuple_size< cv::Size_< T > >", "structstd_1_1tuple__size_3_01cv_1_1_size___3_01_t_01_4_01_4.html", null ],
      [ "tuple_size< cv::Vec< T, cn > >", "structstd_1_1tuple__size_3_01cv_1_1_vec_3_01_t_00_01cn_01_4_01_4.html", null ],
      [ "tuple_size< vccc::Matrix< T, m, n > >", "structstd_1_1tuple__size_3_01vccc_1_1_matrix_3_01_t_00_01m_00_01n_01_4_01_4.html", null ],
      [ "tuple_size< vccc::MatrixBase< Derived > >", "structstd_1_1tuple__size_3_01vccc_1_1_matrix_base_3_01_derived_01_4_01_4.html", null ]
    ] ],
    [ "test", "namespacetest.html", [
      [ "Copyable", "structtest_1_1_copyable.html", null ],
      [ "CopyAssignable", "structtest_1_1_copy_assignable.html", null ],
      [ "CopyConstructable", "structtest_1_1_copy_constructable.html", null ],
      [ "Movable", "structtest_1_1_movable.html", null ],
      [ "MoveAssignable", "structtest_1_1_move_assignable.html", null ],
      [ "MoveConstructable", "structtest_1_1_move_constructable.html", null ],
      [ "NonCopyAssignable", "structtest_1_1_non_copy_assignable.html", "structtest_1_1_non_copy_assignable" ],
      [ "NonCopyConstructable", "structtest_1_1_non_copy_constructable.html", "structtest_1_1_non_copy_constructable" ],
      [ "NonMoveAssignable", "structtest_1_1_non_move_assignable.html", "structtest_1_1_non_move_assignable" ],
      [ "NonMoveConstructable", "structtest_1_1_non_move_constructable.html", "structtest_1_1_non_move_constructable" ],
      [ "TestCounter", "structtest_1_1_test_counter.html", "structtest_1_1_test_counter" ]
    ] ],
    [ "vccc", "namespacevccc.html", [
      [ "internal", "namespacevccc_1_1internal.html", [
        [ "math", "namespacevccc_1_1internal_1_1math.html", [
          [ "hold_type_selector", "structvccc_1_1internal_1_1math_1_1hold__type__selector.html", "structvccc_1_1internal_1_1math_1_1hold__type__selector" ],
          [ "is_alias_safe", "structvccc_1_1internal_1_1math_1_1is__alias__safe.html", null ],
          [ "is_concrete_matrix", "structvccc_1_1internal_1_1math_1_1is__concrete__matrix.html", null ],
          [ "is_concrete_matrix< Matrix< T, m, n > >", "structvccc_1_1internal_1_1math_1_1is__concrete__matrix_3_01_matrix_3_01_t_00_01m_00_01n_01_4_01_4.html", null ],
          [ "is_same_size", "structvccc_1_1internal_1_1math_1_1is__same__size.html", null ],
          [ "is_same_size_impl", "structvccc_1_1internal_1_1math_1_1is__same__size__impl.html", null ],
          [ "is_same_type", "structvccc_1_1internal_1_1math_1_1is__same__type.html", null ],
          [ "is_same_type_impl", "structvccc_1_1internal_1_1math_1_1is__same__type__impl.html", null ],
          [ "matrix_ctor_all_t", "structvccc_1_1internal_1_1math_1_1matrix__ctor__all__t.html", null ],
          [ "matrix_ctor_diag_t", "structvccc_1_1internal_1_1math_1_1matrix__ctor__diag__t.html", null ],
          [ "matrix_ctor_indexable_t", "structvccc_1_1internal_1_1math_1_1matrix__ctor__indexable__t.html", null ],
          [ "tag", "structvccc_1_1internal_1_1math_1_1tag.html", null ],
          [ "tag< T, v1 >", "structvccc_1_1internal_1_1math_1_1tag_3_01_t_00_01v1_01_4.html", "structvccc_1_1internal_1_1math_1_1tag_3_01_t_00_01v1_01_4" ],
          [ "tag< T, v1, v2 >", "structvccc_1_1internal_1_1math_1_1tag_3_01_t_00_01v1_00_01v2_01_4.html", null ],
          [ "tag< T, v1, v2, v3 >", "structvccc_1_1internal_1_1math_1_1tag_3_01_t_00_01v1_00_01v2_00_01v3_01_4.html", null ],
          [ "tag< T, v1, v2, v3, v4 >", "structvccc_1_1internal_1_1math_1_1tag_3_01_t_00_01v1_00_01v2_00_01v3_00_01v4_01_4.html", null ],
          [ "tag< T, v1, v2, v3, v4, v5 >", "structvccc_1_1internal_1_1math_1_1tag_3_01_t_00_01v1_00_01v2_00_01v3_00_01v4_00_01v5_01_4.html", null ],
          [ "traits", "structvccc_1_1internal_1_1math_1_1traits.html", null ],
          [ "traits< const T >", "structvccc_1_1internal_1_1math_1_1traits_3_01const_01_t_01_4.html", null ],
          [ "traits< Matrix< T, m, n > >", "structvccc_1_1internal_1_1math_1_1traits_3_01_matrix_3_01_t_00_01m_00_01n_01_4_01_4.html", "structvccc_1_1internal_1_1math_1_1traits_3_01_matrix_3_01_t_00_01m_00_01n_01_4_01_4" ],
          [ "traits< MatrixDivScalar< LhsType, RhsType > >", "structvccc_1_1internal_1_1math_1_1traits_3_01_matrix_div_scalar_3_01_lhs_type_00_01_rhs_type_01_4_01_4.html", "structvccc_1_1internal_1_1math_1_1traits_3_01_matrix_div_scalar_3_01_lhs_type_00_01_rhs_type_01_4_01_4" ],
          [ "traits< MatrixMinus< E > >", "structvccc_1_1internal_1_1math_1_1traits_3_01_matrix_minus_3_01_e_01_4_01_4.html", "structvccc_1_1internal_1_1math_1_1traits_3_01_matrix_minus_3_01_e_01_4_01_4" ],
          [ "traits< MatrixMulMatrix< LhsType, RhsType > >", "structvccc_1_1internal_1_1math_1_1traits_3_01_matrix_mul_matrix_3_01_lhs_type_00_01_rhs_type_01_4_01_4.html", "structvccc_1_1internal_1_1math_1_1traits_3_01_matrix_mul_matrix_3_01_lhs_type_00_01_rhs_type_01_4_01_4" ],
          [ "traits< MatrixMulScalar< LhsType, RhsType > >", "structvccc_1_1internal_1_1math_1_1traits_3_01_matrix_mul_scalar_3_01_lhs_type_00_01_rhs_type_01_4_01_4.html", "structvccc_1_1internal_1_1math_1_1traits_3_01_matrix_mul_scalar_3_01_lhs_type_00_01_rhs_type_01_4_01_4" ],
          [ "traits< MatrixProxyNocopy< ExprType > >", "structvccc_1_1internal_1_1math_1_1traits_3_01_matrix_proxy_nocopy_3_01_expr_type_01_4_01_4.html", "structvccc_1_1internal_1_1math_1_1traits_3_01_matrix_proxy_nocopy_3_01_expr_type_01_4_01_4" ],
          [ "traits< MatrixSub< LhsType, RhsType > >", "structvccc_1_1internal_1_1math_1_1traits_3_01_matrix_sub_3_01_lhs_type_00_01_rhs_type_01_4_01_4.html", "structvccc_1_1internal_1_1math_1_1traits_3_01_matrix_sub_3_01_lhs_type_00_01_rhs_type_01_4_01_4" ],
          [ "traits< MatrixSum< LhsType, RhsType > >", "structvccc_1_1internal_1_1math_1_1traits_3_01_matrix_sum_3_01_lhs_type_00_01_rhs_type_01_4_01_4.html", "structvccc_1_1internal_1_1math_1_1traits_3_01_matrix_sum_3_01_lhs_type_00_01_rhs_type_01_4_01_4" ]
        ] ],
        [ "optional", "namespacevccc_1_1internal_1_1optional.html", [
          [ "internal", "namespacevccc_1_1internal_1_1optional_1_1internal.html", [
            [ "is_swappable_with_impl", "structvccc_1_1internal_1_1optional_1_1internal_1_1is__swappable__with__impl.html", null ],
            [ "is_swappable_with_impl< T, U, void_t< decltype((swap(std::declval< T >(), std::declval< U >()), swap(std::declval< U >(), std::declval< T >())))> >", "structvccc_1_1internal_1_1optional_1_1internal_1_1is__swappable__with__impl_3_01_t_00_01_u_00_014ee9e40eddc83dcd0aab8e07a06cdda8.html", null ]
          ] ],
          [ "check_assignable", "structvccc_1_1internal_1_1optional_1_1check__assignable.html", null ],
          [ "check_constructible", "structvccc_1_1internal_1_1optional_1_1check__constructible.html", null ],
          [ "check_convertible", "structvccc_1_1internal_1_1optional_1_1check__convertible.html", null ],
          [ "check_copy_assignable", "structvccc_1_1internal_1_1optional_1_1check__copy__assignable.html", null ],
          [ "check_copy_assignable< T, false >", "structvccc_1_1internal_1_1optional_1_1check__copy__assignable_3_01_t_00_01false_01_4.html", "structvccc_1_1internal_1_1optional_1_1check__copy__assignable_3_01_t_00_01false_01_4" ],
          [ "check_copy_constructible", "structvccc_1_1internal_1_1optional_1_1check__copy__constructible.html", null ],
          [ "check_copy_constructible< T, false >", "structvccc_1_1internal_1_1optional_1_1check__copy__constructible_3_01_t_00_01false_01_4.html", "structvccc_1_1internal_1_1optional_1_1check__copy__constructible_3_01_t_00_01false_01_4" ],
          [ "check_move_assignable", "structvccc_1_1internal_1_1optional_1_1check__move__assignable.html", null ],
          [ "check_move_assignable< T, false >", "structvccc_1_1internal_1_1optional_1_1check__move__assignable_3_01_t_00_01false_01_4.html", "structvccc_1_1internal_1_1optional_1_1check__move__assignable_3_01_t_00_01false_01_4" ],
          [ "check_move_constructible", "structvccc_1_1internal_1_1optional_1_1check__move__constructible.html", null ],
          [ "check_move_constructible< T, false >", "structvccc_1_1internal_1_1optional_1_1check__move__constructible_3_01_t_00_01false_01_4.html", "structvccc_1_1internal_1_1optional_1_1check__move__constructible_3_01_t_00_01false_01_4" ],
          [ "conditional_tf", "structvccc_1_1internal_1_1optional_1_1conditional__tf.html", null ],
          [ "constructible", "structvccc_1_1internal_1_1optional_1_1constructible.html", null ],
          [ "copy_assign", "structvccc_1_1internal_1_1optional_1_1copy__assign.html", "structvccc_1_1internal_1_1optional_1_1copy__assign" ],
          [ "copy_assign< T, false >", "structvccc_1_1internal_1_1optional_1_1copy__assign_3_01_t_00_01false_01_4.html", "structvccc_1_1internal_1_1optional_1_1copy__assign_3_01_t_00_01false_01_4" ],
          [ "copy_ctor", "structvccc_1_1internal_1_1optional_1_1copy__ctor.html", "structvccc_1_1internal_1_1optional_1_1copy__ctor" ],
          [ "copy_ctor< T, false >", "structvccc_1_1internal_1_1optional_1_1copy__ctor_3_01_t_00_01false_01_4.html", "structvccc_1_1internal_1_1optional_1_1copy__ctor_3_01_t_00_01false_01_4" ],
          [ "dtor", "structvccc_1_1internal_1_1optional_1_1dtor.html", "structvccc_1_1internal_1_1optional_1_1dtor" ],
          [ "dtor< T, false >", "structvccc_1_1internal_1_1optional_1_1dtor_3_01_t_00_01false_01_4.html", "structvccc_1_1internal_1_1optional_1_1dtor_3_01_t_00_01false_01_4" ],
          [ "is_referencable", "structvccc_1_1internal_1_1optional_1_1is__referencable.html", null ],
          [ "is_referencable< T, void_t< T & > >", "structvccc_1_1internal_1_1optional_1_1is__referencable_3_01_t_00_01void__t_3_01_t_01_6_01_4_01_4.html", null ],
          [ "is_swappable", "structvccc_1_1internal_1_1optional_1_1is__swappable.html", null ],
          [ "move_assign", "structvccc_1_1internal_1_1optional_1_1move__assign.html", "structvccc_1_1internal_1_1optional_1_1move__assign" ],
          [ "move_assign< T, false >", "structvccc_1_1internal_1_1optional_1_1move__assign_3_01_t_00_01false_01_4.html", "structvccc_1_1internal_1_1optional_1_1move__assign_3_01_t_00_01false_01_4" ],
          [ "move_ctor", "structvccc_1_1internal_1_1optional_1_1move__ctor.html", "structvccc_1_1internal_1_1optional_1_1move__ctor" ],
          [ "move_ctor< T, false >", "structvccc_1_1internal_1_1optional_1_1move__ctor_3_01_t_00_01false_01_4.html", "structvccc_1_1internal_1_1optional_1_1move__ctor_3_01_t_00_01false_01_4" ],
          [ "not_constructible", "structvccc_1_1internal_1_1optional_1_1not__constructible.html", "structvccc_1_1internal_1_1optional_1_1not__constructible" ],
          [ "strip", "structvccc_1_1internal_1_1optional_1_1strip.html", "structvccc_1_1internal_1_1optional_1_1strip" ]
        ] ],
        [ "swappable_test", "namespacevccc_1_1internal_1_1swappable__test.html", [
          [ "is_swappable_with_impl", "structvccc_1_1internal_1_1swappable__test_1_1is__swappable__with__impl.html", null ],
          [ "is_swappable_with_impl< T, U, void_t< decltype((swap(std::declval< T >(), std::declval< U >()), swap(std::declval< U >(), std::declval< T >())))> >", "structvccc_1_1internal_1_1swappable__test_1_1is__swappable__with__impl_3_01_t_00_01_u_00_01void_1f6d19fd8c089d08012a9f7108f73414.html", null ]
        ] ],
        [ "type_support", "namespacevccc_1_1internal_1_1type__support.html", [
          [ "saturate_cast_possible", "structvccc_1_1internal_1_1type__support_1_1saturate__cast__possible.html", null ]
        ] ],
        [ "are_types_c_printable", "structvccc_1_1internal_1_1are__types__c__printable.html", null ],
        [ "are_types_c_printable< T >", "structvccc_1_1internal_1_1are__types__c__printable_3_01_t_01_4.html", null ],
        [ "are_types_c_printable< T, Ts... >", "structvccc_1_1internal_1_1are__types__c__printable_3_01_t_00_01_ts_8_8_8_01_4.html", null ],
        [ "bind_obj", "classvccc_1_1internal_1_1bind__obj.html", "classvccc_1_1internal_1_1bind__obj" ],
        [ "can_decay_to_scalar", "structvccc_1_1internal_1_1can__decay__to__scalar.html", null ],
        [ "can_decay_to_scalar_impl", "structvccc_1_1internal_1_1can__decay__to__scalar__impl.html", null ],
        [ "get_cv_point", "structvccc_1_1internal_1_1get__cv__point.html", null ],
        [ "get_cv_point< 0 >", "structvccc_1_1internal_1_1get__cv__point_3_010_01_4.html", null ],
        [ "get_cv_point< 1 >", "structvccc_1_1internal_1_1get__cv__point_3_011_01_4.html", null ],
        [ "get_cv_point< 2 >", "structvccc_1_1internal_1_1get__cv__point_3_012_01_4.html", null ],
        [ "get_cv_size", "structvccc_1_1internal_1_1get__cv__size.html", null ],
        [ "get_cv_size< 0 >", "structvccc_1_1internal_1_1get__cv__size_3_010_01_4.html", null ],
        [ "get_cv_size< 1 >", "structvccc_1_1internal_1_1get__cv__size_3_011_01_4.html", null ],
        [ "get_cv_vec", "structvccc_1_1internal_1_1get__cv__vec.html", null ],
        [ "get_cv_vec< I, true >", "structvccc_1_1internal_1_1get__cv__vec_3_01_i_00_01true_01_4.html", null ],
        [ "get_invoke_category", "structvccc_1_1internal_1_1get__invoke__category.html", "structvccc_1_1internal_1_1get__invoke__category" ],
        [ "has_size", "structvccc_1_1internal_1_1has__size.html", null ],
        [ "has_size< T, void_t< decltype(std::declval< T & >().size())> >", "structvccc_1_1internal_1_1has__size_3_01_t_00_01void__t_3_01decltype_07std_1_1declval_3_01_t_01_e0b5cb685cc0f86375c5d015c54c087f.html", null ],
        [ "invoke_category_base_of", "structvccc_1_1internal_1_1invoke__category__base__of.html", null ],
        [ "invoke_category_normal", "structvccc_1_1internal_1_1invoke__category__normal.html", null ],
        [ "invoke_category_reference_wrapper", "structvccc_1_1internal_1_1invoke__category__reference__wrapper.html", null ],
        [ "is_referencable", "structvccc_1_1internal_1_1is__referencable.html", null ],
        [ "is_referencable< T, void_t< T & > >", "structvccc_1_1internal_1_1is__referencable_3_01_t_00_01void__t_3_01_t_01_6_01_4_01_4.html", null ],
        [ "is_reference_wrapper", "structvccc_1_1internal_1_1is__reference__wrapper.html", null ],
        [ "is_reference_wrapper< std::reference_wrapper< T > >", "structvccc_1_1internal_1_1is__reference__wrapper_3_01std_1_1reference__wrapper_3_01_t_01_4_01_4.html", null ],
        [ "lossless_type_int_division", "structvccc_1_1internal_1_1lossless__type__int__division.html", null ],
        [ "lossless_type_int_division< T1, T2 >", "structvccc_1_1internal_1_1lossless__type__int__division_3_01_t1_00_01_t2_01_4.html", "structvccc_1_1internal_1_1lossless__type__int__division_3_01_t1_00_01_t2_01_4" ],
        [ "tuple_element_impl", "structvccc_1_1internal_1_1tuple__element__impl.html", null ],
        [ "tuple_element_impl< I, cv::Matx< T, m, n >, true >", "structvccc_1_1internal_1_1tuple__element__impl_3_01_i_00_01cv_1_1_matx_3_01_t_00_01m_00_01n_01_4_00_01true_01_4.html", "structvccc_1_1internal_1_1tuple__element__impl_3_01_i_00_01cv_1_1_matx_3_01_t_00_01m_00_01n_01_4_00_01true_01_4" ],
        [ "tuple_element_impl< I, cv::Vec< T, n >, true >", "structvccc_1_1internal_1_1tuple__element__impl_3_01_i_00_01cv_1_1_vec_3_01_t_00_01n_01_4_00_01true_01_4.html", "structvccc_1_1internal_1_1tuple__element__impl_3_01_i_00_01cv_1_1_vec_3_01_t_00_01n_01_4_00_01true_01_4" ],
        [ "tuple_size_or_zero", "structvccc_1_1internal_1_1tuple__size__or__zero.html", null ],
        [ "tuple_size_or_zero< T, true >", "structvccc_1_1internal_1_1tuple__size__or__zero_3_01_t_00_01true_01_4.html", null ]
      ] ],
      [ "always_false", "structvccc_1_1always__false.html", null ],
      [ "always_true", "structvccc_1_1always__true.html", null ],
      [ "are_arithmetic", "structvccc_1_1are__arithmetic.html", null ],
      [ "are_floating_point", "structvccc_1_1are__floating__point.html", null ],
      [ "are_integral", "structvccc_1_1are__integral.html", null ],
      [ "are_scalar", "structvccc_1_1are__scalar.html", null ],
      [ "arity", "structvccc_1_1arity.html", null ],
      [ "back_emplace_iterator", "classvccc_1_1back__emplace__iterator.html", "classvccc_1_1back__emplace__iterator" ],
      [ "bad_optional_access", "classvccc_1_1bad__optional__access.html", "classvccc_1_1bad__optional__access" ],
      [ "BasicStreamWrapper", "classvccc_1_1_basic_stream_wrapper.html", "classvccc_1_1_basic_stream_wrapper" ],
      [ "bigger_type", "structvccc_1_1bigger__type.html", null ],
      [ "bigger_type< T >", "structvccc_1_1bigger__type_3_01_t_01_4.html", "structvccc_1_1bigger__type_3_01_t_01_4" ],
      [ "bigger_type< T1, T2 >", "structvccc_1_1bigger__type_3_01_t1_00_01_t2_01_4.html", "structvccc_1_1bigger__type_3_01_t1_00_01_t2_01_4" ],
      [ "bigger_type< T1, T2, Ts... >", "structvccc_1_1bigger__type_3_01_t1_00_01_t2_00_01_ts_8_8_8_01_4.html", "structvccc_1_1bigger__type_3_01_t1_00_01_t2_00_01_ts_8_8_8_01_4" ],
      [ "conjunction", "structvccc_1_1conjunction.html", null ],
      [ "conjunction< B1 >", "structvccc_1_1conjunction_3_01_b1_01_4.html", null ],
      [ "conjunction< B1, BN... >", "structvccc_1_1conjunction_3_01_b1_00_01_b_n_8_8_8_01_4.html", null ],
      [ "conjunction<>", "structvccc_1_1conjunction_3_4.html", null ],
      [ "connection", "classvccc_1_1connection.html", "classvccc_1_1connection" ],
      [ "differential_five_point_stencil_t", "structvccc_1_1differential__five__point__stencil__t.html", null ],
      [ "differential_newtonian_t", "structvccc_1_1differential__newtonian__t.html", null ],
      [ "differential_symmetric_t", "structvccc_1_1differential__symmetric__t.html", null ],
      [ "directory", "classvccc_1_1directory.html", "classvccc_1_1directory" ],
      [ "disjunction", "structvccc_1_1disjunction.html", null ],
      [ "disjunction< B1 >", "structvccc_1_1disjunction_3_01_b1_01_4.html", null ],
      [ "disjunction< B1, BN... >", "structvccc_1_1disjunction_3_01_b1_00_01_b_n_8_8_8_01_4.html", null ],
      [ "disjunction<>", "structvccc_1_1disjunction_3_4.html", null ],
      [ "Formatter", "classvccc_1_1_formatter.html", "classvccc_1_1_formatter" ],
      [ "group_key", "structvccc_1_1group__key.html", "structvccc_1_1group__key" ],
      [ "group_key_compare", "structvccc_1_1group__key__compare.html", "structvccc_1_1group__key__compare" ],
      [ "grouped_slot_list", "structvccc_1_1grouped__slot__list.html", "structvccc_1_1grouped__slot__list" ],
      [ "in_place_t", "structvccc_1_1in__place__t.html", "structvccc_1_1in__place__t" ],
      [ "IOSFlagsSaver", "classvccc_1_1_i_o_s_flags_saver.html", "classvccc_1_1_i_o_s_flags_saver" ],
      [ "is_bounded_array", "structvccc_1_1is__bounded__array.html", null ],
      [ "is_bounded_array< T[N]>", "structvccc_1_1is__bounded__array_3_01_t_0f_n_0e_4.html", null ],
      [ "is_even", "structvccc_1_1is__even.html", null ],
      [ "is_iterable", "structvccc_1_1is__iterable.html", null ],
      [ "is_iterator", "structvccc_1_1is__iterator.html", null ],
      [ "is_iterator< T, typename std::enable_if_t< !std::is_same< typename std::iterator_traits< T >::value_type, void >::value > >", "structvccc_1_1is__iterator_3_01_t_00_01typename_01std_1_1enable__if__t_3_01_9std_1_1is__same_3_0c3c75ffc882128fdbfc3c76d60116397.html", null ],
      [ "is_matrix", "structvccc_1_1is__matrix.html", null ],
      [ "is_odd", "structvccc_1_1is__odd.html", null ],
      [ "is_printable", "structvccc_1_1is__printable.html", null ],
      [ "is_printable< T, void_t< decltype(std::declval< std::ostream & >()<< std::declval< const T & >())> >", "structvccc_1_1is__printable_3_01_t_00_01void__t_3_01decltype_07std_1_1declval_3_01std_1_1ostream6cbfd16e3bf2071a10020304b0152625.html", null ],
      [ "is_range", "structvccc_1_1is__range.html", null ],
      [ "is_range< T, void_t< decltype(std::declval< T >().begin()), decltype(std::declval< T >().end())> >", "structvccc_1_1is__range_3_01_t_00_01void__t_3_01decltype_07std_1_1declval_3_01_t_01_4_07_08_8beg030930e16dabb4db42e0427237d7bae5.html", null ],
      [ "is_specialization", "structvccc_1_1is__specialization.html", null ],
      [ "is_specialization< Ref< Args... >, Ref >", "structvccc_1_1is__specialization_3_01_ref_3_01_args_8_8_8_01_4_00_01_ref_01_4.html", null ],
      [ "is_string_like", "structvccc_1_1is__string__like.html", null ],
      [ "is_string_like< const char * >", "structvccc_1_1is__string__like_3_01const_01char_01_5_01_4.html", null ],
      [ "is_swappable", "structvccc_1_1is__swappable.html", null ],
      [ "is_tuple_like", "structvccc_1_1is__tuple__like.html", null ],
      [ "is_tuple_like< T, void_t< decltype(std::tuple_size< T >::value)> >", "structvccc_1_1is__tuple__like_3_01_t_00_01void__t_3_01decltype_07std_1_1tuple__size_3_01_t_01_4_1_1value_08_4_01_4.html", null ],
      [ "is_unbounded_array", "structvccc_1_1is__unbounded__array.html", null ],
      [ "is_unbounded_array< T[]>", "structvccc_1_1is__unbounded__array_3_01_t_0f_0e_4.html", null ],
      [ "Logger", "classvccc_1_1_logger.html", "classvccc_1_1_logger" ],
      [ "lossless_type_add", "structvccc_1_1lossless__type__add.html", null ],
      [ "lossless_type_div", "structvccc_1_1lossless__type__div.html", null ],
      [ "lossless_type_mul", "structvccc_1_1lossless__type__mul.html", null ],
      [ "Matrix", "classvccc_1_1_matrix.html", "classvccc_1_1_matrix" ],
      [ "MatrixAssigner", "classvccc_1_1_matrix_assigner.html", "classvccc_1_1_matrix_assigner" ],
      [ "MatrixBase", "classvccc_1_1_matrix_base.html", "classvccc_1_1_matrix_base" ],
      [ "MatrixDivScalar", "classvccc_1_1_matrix_div_scalar.html", "classvccc_1_1_matrix_div_scalar" ],
      [ "MatrixInverter", "classvccc_1_1_matrix_inverter.html", "classvccc_1_1_matrix_inverter" ],
      [ "MatrixMinus", "classvccc_1_1_matrix_minus.html", "classvccc_1_1_matrix_minus" ],
      [ "MatrixMulMatrix", "classvccc_1_1_matrix_mul_matrix.html", "classvccc_1_1_matrix_mul_matrix" ],
      [ "MatrixMulScalar", "classvccc_1_1_matrix_mul_scalar.html", "classvccc_1_1_matrix_mul_scalar" ],
      [ "MatrixProxyNocopy", "classvccc_1_1_matrix_proxy_nocopy.html", "classvccc_1_1_matrix_proxy_nocopy" ],
      [ "MatrixSub", "classvccc_1_1_matrix_sub.html", "classvccc_1_1_matrix_sub" ],
      [ "MatrixSum", "classvccc_1_1_matrix_sum.html", "classvccc_1_1_matrix_sum" ],
      [ "multiples_of", "structvccc_1_1multiples__of.html", null ],
      [ "negation", "structvccc_1_1negation.html", null ],
      [ "nullopt_t", "structvccc_1_1nullopt__t.html", "structvccc_1_1nullopt__t" ],
      [ "optional", "classvccc_1_1optional.html", "classvccc_1_1optional" ],
      [ "raii_connection", "classvccc_1_1raii__connection.html", "classvccc_1_1raii__connection" ],
      [ "range", "classvccc_1_1range.html", "classvccc_1_1range" ],
      [ "remove_cvref", "structvccc_1_1remove__cvref.html", "structvccc_1_1remove__cvref" ],
      [ "Separator", "classvccc_1_1_separator.html", "classvccc_1_1_separator" ],
      [ "signal", "classvccc_1_1signal.html", null ],
      [ "signal< R(Args...), Group >", "classvccc_1_1signal_3_01_r_07_args_8_8_8_08_00_01_group_01_4.html", "classvccc_1_1signal_3_01_r_07_args_8_8_8_08_00_01_group_01_4" ],
      [ "signal_impl", "classvccc_1_1signal__impl.html", null ],
      [ "signed_bigger_type", "structvccc_1_1signed__bigger__type.html", null ],
      [ "signed_bigger_type< T >", "structvccc_1_1signed__bigger__type_3_01_t_01_4.html", "structvccc_1_1signed__bigger__type_3_01_t_01_4" ],
      [ "signed_bigger_type< T1, T2 >", "structvccc_1_1signed__bigger__type_3_01_t1_00_01_t2_01_4.html", "structvccc_1_1signed__bigger__type_3_01_t1_00_01_t2_01_4" ],
      [ "signed_bigger_type< T1, T2, Ts... >", "structvccc_1_1signed__bigger__type_3_01_t1_00_01_t2_00_01_ts_8_8_8_01_4.html", "structvccc_1_1signed__bigger__type_3_01_t1_00_01_t2_00_01_ts_8_8_8_01_4" ],
      [ "slot", "classvccc_1_1slot.html", null ],
      [ "slot< R(Args...)>", "classvccc_1_1slot_3_01_r_07_args_8_8_8_08_4.html", "classvccc_1_1slot_3_01_r_07_args_8_8_8_08_4" ],
      [ "static_diff", "structvccc_1_1static__diff.html", null ],
      [ "static_max", "structvccc_1_1static__max.html", null ],
      [ "static_max< T, v >", "structvccc_1_1static__max_3_01_t_00_01v_01_4.html", null ],
      [ "static_max< T, v1, v2, v3... >", "structvccc_1_1static__max_3_01_t_00_01v1_00_01v2_00_01v3_8_8_8_01_4.html", null ],
      [ "static_min", "structvccc_1_1static__min.html", null ],
      [ "static_min< T, v >", "structvccc_1_1static__min_3_01_t_00_01v_01_4.html", null ],
      [ "static_min< T, v1, v2, v3... >", "structvccc_1_1static__min_3_01_t_00_01v1_00_01v2_00_01v3_8_8_8_01_4.html", null ],
      [ "StreamManipulator", "classvccc_1_1_stream_manipulator.html", "classvccc_1_1_stream_manipulator" ],
      [ "StreamWrapperBase", "classvccc_1_1_stream_wrapper_base.html", "classvccc_1_1_stream_wrapper_base" ],
      [ "type_identity", "structvccc_1_1type__identity.html", "structvccc_1_1type__identity" ],
      [ "unsigned_bigger_type", "structvccc_1_1unsigned__bigger__type.html", null ],
      [ "unsigned_bigger_type< T >", "structvccc_1_1unsigned__bigger__type_3_01_t_01_4.html", "structvccc_1_1unsigned__bigger__type_3_01_t_01_4" ],
      [ "unsigned_bigger_type< T1, T2 >", "structvccc_1_1unsigned__bigger__type_3_01_t1_00_01_t2_01_4.html", "structvccc_1_1unsigned__bigger__type_3_01_t1_00_01_t2_01_4" ],
      [ "unsigned_bigger_type< T1, T2, Ts... >", "structvccc_1_1unsigned__bigger__type_3_01_t1_00_01_t2_00_01_ts_8_8_8_01_4.html", "structvccc_1_1unsigned__bigger__type_3_01_t1_00_01_t2_00_01_ts_8_8_8_01_4" ]
    ] ],
    [ "bar", "structbar.html", "structbar" ],
    [ "CopyConstructableButNotTrivial", "struct_copy_constructable_but_not_trivial.html", "struct_copy_constructable_but_not_trivial" ],
    [ "CopyConstructableForbidden", "struct_copy_constructable_forbidden.html", "struct_copy_constructable_forbidden" ],
    [ "CopyConstructableTrivially", "struct_copy_constructable_trivially.html", "struct_copy_constructable_trivially" ],
    [ "Floating_", "struct_floating__.html", "struct_floating__" ],
    [ "foo", "structfoo.html", null ],
    [ "MoveConstructableButNotTrivial", "struct_move_constructable_but_not_trivial.html", "struct_move_constructable_but_not_trivial" ],
    [ "MoveConstructableForbidden", "struct_move_constructable_forbidden.html", "struct_move_constructable_forbidden" ],
    [ "MoveConstructableTrivially", "struct_move_constructable_trivially.html", "struct_move_constructable_trivially" ],
    [ "tt", "structtt.html", "structtt" ]
];