.TH "type_support/include/vccc/type_support/opencv/cv_point3.hpp" 3 "Fri Dec 18 2020" "VCCC" \" -*- nroff -*-
.ad l
.nh
.SH NAME
type_support/include/vccc/type_support/opencv/cv_point3.hpp
.SH SYNOPSIS
.br
.PP
\fC#include 'opencv2/core/types\&.hpp'\fP
.br
\fC#include 'vccc/type_traits\&.hpp'\fP
.br

.SS "Classes"

.in +1c
.ti -1c
.RI "struct \fBvccc::detail::cv_size< cv::Point3_< T > >\fP"
.br
.in -1c
.SS "Namespaces"

.in +1c
.ti -1c
.RI " \fBvccc\fP"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "template<std::size_t i, typename T , std::enable_if_t< i==0, int >  = 0> constexpr T & \fBvccc::at\fP (cv::Point3_< T > &point3)"
.br
.ti -1c
.RI "template<std::size_t i, typename T , std::enable_if_t< i==0, int >  = 0> constexpr const T & \fBvccc::at\fP (const cv::Point3_< T > &point3)"
.br
.ti -1c
.RI "template<std::size_t i, typename T , std::enable_if_t< i==0, int >  = 0> constexpr T && \fBvccc::at\fP (cv::Point3_< T > &&point3)"
.br
.ti -1c
.RI "template<std::size_t i, typename T , std::enable_if_t< i==0, int >  = 0> constexpr const T && \fBvccc::at\fP (const cv::Point3_< T > &&point3)"
.br
.ti -1c
.RI "template<typename T , typename N > cv::Point3_< T > \fBvccc::add\fP (const cv::Point3_< T > &point3, N n)"
.br
.ti -1c
.RI "template<int new_size, typename T , VCCC_REQUIRE(new_size==2) > auto \fBvccc::resize\fP (const cv::Point3_< T > &from)"
.br
.in -1c
.SH "Author"
.PP 
Generated automatically by Doxygen for VCCC from the source code\&.
