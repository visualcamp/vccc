.TH "numeric/include/vccc/numeric/average.hpp" 3 "Fri Dec 18 2020" "VCCC" \" -*- nroff -*-
.ad l
.nh
.SH NAME
numeric/include/vccc/numeric/average.hpp
.SH SYNOPSIS
.br
.PP
\fC#include <iterator>\fP
.br
\fC#include 'vccc/type_traits\&.hpp'\fP
.br
\fC#include 'vccc/numeric/sum\&.hpp'\fP
.br

.SS "Namespaces"

.in +1c
.ti -1c
.RI " \fBvccc\fP"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "template<typename InputIterator , VCCC_REQUIRE(iterable< InputIterator >) > constexpr auto \fBvccc::average\fP (InputIterator first, InputIterator last)"
.br
.ti -1c
.RI "template<typename InputIterator , typename UnaryOperation , VCCC_REQUIRE(iterable< InputIterator >) > constexpr auto \fBvccc::average\fP (InputIterator first, InputIterator last, UnaryOperation unary_op)"
.br
.ti -1c
.RI "template<typename \&.\&.\&. Numbers, VCCC_REQUIRE(are_arithmetic_v< Numbers\&.\&.\&. >) > constexpr auto \fBvccc::average\fP (Numbers\&.\&.\&. numbers)"
.br
.ti -1c
.RI "template<typename \&.\&.\&. Ints, VCCC_REQUIRE(are_integral_v< Ints\&.\&.\&. >) > constexpr auto \fBvccc::int_average\fP (Ints\&.\&.\&. ints)"
.br
.ti -1c
.RI "template<typename \&.\&.\&. Args, VCCC_REQUIRE(!iterable< Args\&.\&.\&. > &&!are_arithmetic_v< Args\&.\&.\&. >) > constexpr auto \fBvccc::average\fP (const Args &\&.\&.\&. args)"
.br
.in -1c
.SH "Author"
.PP 
Generated automatically by Doxygen for VCCC from the source code\&.
